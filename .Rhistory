library("boot", lib.loc="C:/Program Files/R/R-3.5.1/library")
library("dplyr", lib.loc="C:/Program Files/R/R-3.5.1/library")
library(readr)
filmVotingData <- read_csv("https://raw.githubusercontent.com/tpemartin/course-107-1-programming-for-data-science/master/data/%E7%AC%AC%E4%B8%89%E5%B1%86%E7%B6%93%E6%BF%9F%E6%92%AD%E5%AE%A2%E7%AB%B6%E8%B3%BD%E5%8F%83%E8%B3%BD%E4%BD%9C%E5%93%81%E6%8A%95%E7%A5%A8%E7%B5%90%E6%9E%9C%E6%A8%A3%E6%9C%AC%20-%20Sheet1.csv")
install.packages("dplyr")
install.packages("dplyr")
install.packages("dplyr")
install.packages("dplyr")
library(readr)
filmVotingData <- read_csv("https://raw.githubusercontent.com/tpemartin/course-107-1-programming-for-data-science/master/data/%E7%AC%AC%E4%B8%89%E5%B1%86%E7%B6%93%E6%BF%9F%E6%92%AD%E5%AE%A2%E7%AB%B6%E8%B3%BD%E5%8F%83%E8%B3%BD%E4%BD%9C%E5%93%81%E6%8A%95%E7%A5%A8%E7%B5%90%E6%9E%9C%E6%A8%A3%E6%9C%AC%20-%20Sheet1.csv")
library("stringr", lib.loc="C:/Program Files/R/R-3.5.1/library")
install.packages(c("MASS", "ps", "stringi", "survival"))
library(readr)
filmVotingData <- read_csv("https://raw.githubusercontent.com/tpemartin/course-107-1-programming-for-data-science/master/data/%E7%AC%AC%E4%B8%89%E5%B1%86%E7%B6%93%E6%BF%9F%E6%92%AD%E5%AE%A2%E7%AB%B6%E8%B3%BD%E5%8F%83%E8%B3%BD%E4%BD%9C%E5%93%81%E6%8A%95%E7%A5%A8%E7%B5%90%E6%9E%9C%E6%A8%A3%E6%9C%AC%20-%20Sheet1.csv")
View(filmVotingData)
library(readr)
filmVotingData <- read_csv("https://raw.githubusercontent.com/tpemartin/course-107-1-programming-for-data-science/master/data/%E7%AC%AC%E4%B8%89%E5%B1%86%E7%B6%93%E6%BF%9F%E6%92%AD%E5%AE%A2%E7%AB%B6%E8%B3%BD%E5%8F%83%E8%B3%BD%E4%BD%9C%E5%93%81%E6%8A%95%E7%A5%A8%E7%B5%90%E6%9E%9C%E6%A8%A3%E6%9C%AC%20-%20Sheet1.csv")
head(filmVotingData)
install.packages("curl")
library(readr)
filmVotingData <- read_csv("https://raw.githubusercontent.com/tpemartin/course-107-1-programming-for-data-science/master/data/%E7%AC%AC%E4%B8%89%E5%B1%86%E7%B6%93%E6%BF%9F%E6%92%AD%E5%AE%A2%E7%AB%B6%E8%B3%BD%E5%8F%83%E8%B3%BD%E4%BD%9C%E5%93%81%E6%8A%95%E7%A5%A8%E7%B5%90%E6%9E%9C%E6%A8%A3%E6%9C%AC%20-%20Sheet1.csv")
library("curl", lib.loc="C:/Program Files/R/R-3.5.1/library")
library(readr)
filmVotingData <- read_csv("https://raw.githubusercontent.com/tpemartin/course-107-1-programming-for-data-science/master/data/%E7%AC%AC%E4%B8%89%E5%B1%86%E7%B6%93%E6%BF%9F%E6%92%AD%E5%AE%A2%E7%AB%B6%E8%B3%BD%E5%8F%83%E8%B3%BD%E4%BD%9C%E5%93%81%E6%8A%95%E7%A5%A8%E7%B5%90%E6%9E%9C%E6%A8%A3%E6%9C%AC%20-%20Sheet1.csv")
aa<-str_split_fixed(filmVotingData$請選擇你最喜歡的影片二部,", ",3)
install.packages("stringr")
aa<-str_split_fixed(filmVotingData$請選擇你最喜歡的影片二部,", ",3)
library(stringr)
aa<-str_split_fixed(filmVotingData$請選擇你最喜歡的影片二部,", ",3)
bb<-str_c(aa)
table(bb)
library(dplyr)
install.packages("dplyr")
library(dplyr)
library(curl)
library(readr)
filmVotingData <- read_csv("https://raw.githubusercontent.com/tpemartin/course-107-1-programming-for-data-science/master/data/%E7%AC%AC%E4%B8%89%E5%B1%86%E7%B6%93%E6%BF%9F%E6%92%AD%E5%AE%A2%E7%AB%B6%E8%B3%BD%E5%8F%83%E8%B3%BD%E4%BD%9C%E5%93%81%E6%8A%95%E7%A5%A8%E7%B5%90%E6%9E%9C%E6%A8%A3%E6%9C%AC%20-%20Sheet1.csv")
library(stringr)
aa<-str_split_fixed(filmVotingData$請選擇你最喜歡的影片二部,", ",3)
bb<-str_c(aa)
table(bb)
View(filmVotingData)
a<-c("A, B","B, C")
a
str_split_fixed(a,", ", n=3)->b
str_c(b)->c
c
table(b)
b
install.packages("lubridate")
?years()
?years
library(readr)
libraryData <- read_csv("https://raw.githubusercontent.com/tpemartin/github-data/master/library100_102.csv")
library(readr)
libraryData <- read_csv("https://raw.githubusercontent.com/tpemartin/github-data/master/library100_102.csv")
plot(cars)
library(readr)
libraryData <- read_csv("https://raw.githubusercontent.com/tpemartin/github-data/master/library100_102.csv")
View(libraryData)
libraryData
libraryData %>% mutate_at(
vars(書籍類別, 書籍館藏地, 學院),
funs(as.factor(.))
) -> libraryData
library(dplyr)
library(lubridate)
libraryData %>% mutate_at(
vars(書籍類別, 書籍館藏地, 學院),
funs(as.factor(.))
) -> libraryData
libraryData %>% mutate(
借閱時間=ymd_hms(
借閱時間,tz="Asia/Taipei"
)
) -> libraryData
library(dplyr)
library(lubridate)
libraryData %>% mutate_at(
vars(書籍類別, 書籍館藏地, 學院),
funs(as.factor(.))
) -> libraryData
libraryData %>% mutate(
借閱時間=ymd_hms(
借閱時間,tz="Asia/Taipei"
)
) -> libraryData
libraryData
minMaxFun <- function(x){
max(x)-> maxNumber
min(x)-> minNumber
paste0("最大值： ",maxNumber, " 最小值： ",minNumber)
}
minMaxFun(libraryData$讀者借閱冊數)
minMaxFun(libraryData$入學年)
minMaxFun(libraryData$書籍上架年月)
minMaxFun <- function(x){
max(x)-> maxNumber
min(x)-> minNumber
paste0("最大值： ",maxNumber, " 最小值： ",minNumber) -> result
return(result)
}
minMaxFun(libraryData$讀者借閱冊數)
minMaxFun(libraryData$入學年)
minMaxFun(libraryData$書籍上架年月)
minMaxFun <- function(x){
max(x)-> maxNumber
min(x)-> minNumber
paste0("最大值： ",maxNumber, " 最小值： ",minNumber) -> result
return(result)
}
minMaxFun <- function(x){
max(x)-> maxNumber
min(x)-> minNumber
paste0("最大值： ",maxNumber, " 最小值： ",minNumber) -> result
return(maxNumber)
}
minMaxFun(libraryData$讀者借閱冊數)
minMaxFun(libraryData$入學年)
minMaxFun(libraryData$書籍上架年月)
minMaxFun <- function(x){
max(x)-> maxNumber
min(x)-> minNumber
paste0("最大值： ",maxNumber, " 最小值： ",minNumber)
return(result)
}
minMaxFun(libraryData$讀者借閱冊數)
minMaxFun(libraryData$讀者借閱冊數)
minMaxFun <- function(x){
max(x)-> maxNumber
min(x)-> minNumber
paste0("最大值： ",maxNumber, " 最小值： ",minNumber)
}
minMaxFun <- function(x){
max(x)-> maxNumber
min(x)-> minNumber
paste0("最大值： ",maxNumber, " 最小值： ",minNumber) -> result
return(result)
}
minMaxFun(libraryData$讀者借閱冊數)
minMaxFun(libraryData$入學年)
minMaxFun(libraryData$書籍上架年月)
is.numeric(libraryData$讀者借閱冊數)
not_numeric <- function(x){
!is.numeric(x)
}
not_numeric(libraryData$讀者借閱冊數)
not_numeric(libraryData$學號)
libraryData %>%
select(讀者借閱冊數,書籍出版日期) %>%
summarise(
讀者平均借閱冊數=mean(讀者借閱冊數),
最小書籍出版日期=min(書籍出版日期),
最大書籍出版日期=max(書籍出版日期)
)
libraryData %>%
select(讀者借閱冊數,書籍出版日期) %>%
summarise(
讀者平均借閱冊數=mean(讀者借閱冊數),
最小書籍出版日期=min(書籍出版日期, na,rm=T),
最大書籍出版日期=max(書籍出版日期, na.rm=T)
)
libraryData %>%
select(讀者借閱冊數,書籍出版日期) %>%
summarise(
讀者平均借閱冊數=mean(讀者借閱冊數),
最小書籍出版日期=min(書籍出版日期, n.rm=T),
最大書籍出版日期=max(書籍出版日期, na.rm=T)
)
libraryData %>%
select(讀者借閱冊數,書籍出版日期) %>%
summarise(
讀者平均借閱冊數=mean(讀者借閱冊數),
最小書籍出版日期=min(書籍出版日期, na.rm=T),
最大書籍出版日期=max(書籍出版日期, na.rm=T)
)
library(readr)
transcriptData <- read_csv("https://raw.githubusercontent.com/tpemartin/github-data/master/transcript100_102.csv")
View(transcriptData)
library(readr)
libraryData <- read_csv("https://raw.githubusercontent.com/tpemartin/github-data/master/library100_102.csv")
library(dplyr)
libraryData$書籍館藏地 %>% as.factor %>% levels -> storageLocations
storageLocations
i<-1
# 1
storageLocation_i <- storageLocations[i]
# 2
numericalIndexForSubsample<-which(libraryData$書籍館藏地==storageLocation_i)
subsample_i <- libraryData[numericalIndexForSubsample,]
# 3
borrowCount_i <- nrow(subsample_i)
# 0
allBorrowCount <- vector("numeric",18)
i<-1
# 1
storageLocation_i <- storageLocations[i]
# 2
numericalIndexForSubsample<-which(libraryData$書籍館藏地==storageLocation_i)
subsample_i <- libraryData[numericalIndexForSubsample,]
# 3
borrowCount_i <- nrow(subsample_i)
# 4
allBorrowCount[[i]]<-borrowCount_i
# 0
allBorrowCount <- vector("numeric",18)
for(i in c(1:18)){
# 1
storageLocation_i <- storageLocations[i]
# 2
numericalIndexForSubsample<-which(libraryData$書籍館藏地==storageLocation_i)
subsample_i <- libraryData[numericalIndexForSubsample,]
# 3
borrowCount_i <- nrow(subsample_i)
# 4
allBorrowCount[[i]]<-borrowCount_i
}
libraryData$學院 %>% as.factor %>% levels -> college
collegeBorrowCount <- vector("numeric",length(college))
for(i in c(1:length(college))){
college_i <- college[i]
numericalIndexForSubsample<-which(libraryData$學院 == college_i)
collegesubsample_i <- libraryData[numericalIndexForSubsample,]
collegeBorrowCount_i <- nrow(collegesubsample_i)
collegeBorrowCount[[i]] <- collegeBorrowCount_i
}
libraryData$學號 %>% as.factor %>% levels -> stuID
stuIDBorrowCount <- vector("numeric",length(stuID))
for (i in 1:length(stuID)) {
stuID_i <- stuID[i]
numericalIndexForSubsample<-which(libraryData$學號 == stuID_i)
stuIDsubsample_i <- libraryData[numericalIndexForSubsample,]
stuIDBorrowCount_i <- nrow(stuIDsubsample_i)
stuIDBorrowCount[[i]] <- stuIDBorrowCount_i
}
max(stuIDBorrowCount)
libraryData %>%
group_by(書籍館藏地) %>%
summarise(
borrowCount=length(學號)
) -> result
result
libraryData %>%
group_by(學院,入學年) %>%
summarise(
borrowCount=length(學號)
) -> result2
result2
plot(cars)
libraryData %>%
filter(入學年==100, 學院=="社會科學院")
library(dplyr)
libraryData %>%
filter(入學年==100, 學院=="社會科學院")
libraryData %>%
filter(between(入學年,100,102), 學院=="社會科學院")
libraryData %>%
filter(入學年 %>% between(100,102), 學院=="社會科學院")
a<-c(1:10)
typeof(a)
b<-list("a","b",1:10)
typeof(b)
class(a)
a<-c(1:10)
typeof(a)
class(a)
View(b)
View(b)
View(b)
typeof(libraryData)
b2<-list("a","b",1:10,
list(
"Mr Smith",
data.frame(
v1=c(1,2),
v2=c("aa","bb"),
stringsAsFactors = F
)
))
View(b2)
library(readr)
filmVotingData <- read_csv("https://raw.githubusercontent.com/tpemartin/course-107-1-programming-for-data-science/master/data/%E7%AC%AC%E4%B8%89%E5%B1%86%E7%B6%93%E6%BF%9F%E6%92%AD%E5%AE%A2%E7%AB%B6%E8%B3%BD%E5%8F%83%E8%B3%BD%E4%BD%9C%E5%93%81%E6%8A%95%E7%A5%A8%E7%B5%90%E6%9E%9C%E6%A8%A3%E6%9C%AC%20-%20Sheet1.csv")
filmVotingData$請選擇你最喜歡的影片二部 %>%
str_split(", (?!(by))") -> filmVotingResult
filmVotingData$請選擇你最喜歡的影片二部 %>%
str_split(", (?!(by))") -> filmVotingResult
plasticContainer <- list(
greenBox=c("paper","scissor"),     # location 1
redBox=c(1L,3L,2.5),               # location 2
blueBox=c(TRUE,FALSE,TRUE,TRUE)    # location 3
)
plasticContainer[c("greenBox")] # or plasticContainer[c(1,2)]
plasticContainer <- list(
greenBox=c("paper","scissor"),     # location 1
redBox=c(1L,3L,2.5),               # location 2
blueBox=c(TRUE,FALSE,TRUE,TRUE)    # location 3
)
plasticContainer[c("greenBox","redBox")] # or plasticContainer[c(1,2)]
plasticContainer[c("greenBox")] # or plasticContainer[c(1,2)]
plasticContainer$greenBox
plasticContainer[["greenBox"]] # or plasticContainer[[1]]
plasticContainer <- list(
greenBox=c("paper","scissor"),     # location 1
redBox=c(1L,3L,2.5),               # location 2
blueBox=c(TRUE,FALSE,TRUE,TRUE)    # location 3
)
plasticContainer[c("greenBox","redBox")] # or plasticContainer[c(1,2)]
plasticContainer[["greenBox"]] # or plasticContainer[[1]]
plasticContainer[c("greenBox")] # or plasticContainer[c(1,2)]
View(plasticContainer)
plasticContainer["greenBox"["paper"]]
plasticContainer["greenBox"[1]]
plasticContainer["greenBox"[[1]]]
plasticContainer["greenBox"[[1]]]
plasticContainer["greenBox"[c(1)]
plasticContainer["greenBox"[c(1,)]
plasticContainer["greenBox"[c(1,0)]
plasticContainer["greenBox"[c(1)]]
plasticContainer["greenBox"[c(1,)]]
plasticContainer["greenBox"[c(1,0)]]
plasticContainer["greenBox"[c(1,1)]]
plasticContainer["greenBox"[c(,1)]]
plasticContainer["greenBox"[c(0,1)]]
plasticContainer["greenBox"[1]]
plasticContainer["greenBox"[c("paper")]]
plasticContainer["greenBox"[c(1)]]
plasticContainer["greenBox"$"paper"]
plasticContainer["greenBox"[[1]]]
plasticContainer["greenBox"[[c(1)]]]
plasticContainer$greenBox
plasticContainer[c("greenBox")[[c(1)]]]
plasticContainer[c("greenBox")[c(1)]]
plasticContainer[["greenBox"[[c(1)]]]
plasticContainer[["greenBox"[[c(1)]]]]
plasticContainer[["greenBox"[c(1)]]]
plasticContainer[["greenBox"[c(1)]]]
plasticContainer[["greenBox"[1]]]
plasticContainer[["greenBox"[[1]]]]
plasticContainer[["greenBox"]][[1]]
plasticContainer[c("greenBox")][[1]]
plasticContainer[c("greenBox")][1]
plasticContainer[["greenBox"]][1]
plasticContainer[c("greenBox")][[1]]
plasticContainer[c("greenBox")][[[1]]]
plasticContainer[c("greenBox")][c(1)]
plasticContainer[c("greenBox")][[c(1)]]
plasticContainer[c(1)] # or plasticContainer[c(1,2)]
plasticContainer[c("greenBox")] # or plasticContainer[c(1,2)]
plasticContainer[c(1,2)] # or plasticContainer[c(1,2)]
plasticContainer[c("greenBox")] # or plasticContainer[c(1,2)]
plasticContainer[c("greenBox",1)]
plasticContainer[c("greenBox"),c(1)]
plasticContainer["greenBox"]$greenBox[1]
install.packages("plotly")
download.file("https://github.com/tpemartin/github-data/blob/master/plotly_4070_neda.Rda?raw=true",destfile = "plotly_4070_neda.Rda")
load("plotly_4070_neda.Rda")
download.file("https://github.com/tpemartin/github-data/blob/master/plotly_4070_neda.Rda?raw=true",destfile = "plotly_4070_neda.Rda")
load("plotly_4070_neda.Rda")
plotly_4070_neda$x$layout$shapes[[1]]$opacity<-0.8
download.file("https://github.com/tpemartin/github-data/blob/master/plotly_4070_neda.Rda?raw=true",destfile = "plotly_4070_neda.Rda")
load("plotly_4070_neda.Rda")
download.file("https://github.com/tpemartin/github-data/blob/master/plotly_4070_neda.Rda?raw=true",destfile = "plotly_4070_neda.Rda")
load("plotly_4070_neda.Rda")
download.file("https://github.com/tpemartin/github-data/blob/master/plotly_4070_neda.Rda?raw=true",destfile = "plotly_4070_neda.Rda")
load("plotly_4070_neda.Rda")
download.file("https://github.com/tpemartin/github-data/blob/master/plotly_4070_neda.Rda?raw=true",destfile = "plotly_4070_neda.Rda")
library(plotly)
plotly_4070_neda
plotly_4070_neda$x$layout$shapes[[1]]$opacity<-0.8
load("plotly_4070_neda.Rda")
download.file("https://github.com/tpemartin/github-data/blob/master/plotly_4070_neda.Rda?raw=true",destfile = "plotly_4070_neda.Rda")
load("plotly_4070_neda.Rda")
library(readr)
download.file("https://github.com/tpemartin/github-data/blob/master/plotly_4070_neda.Rda?raw=true",destfile = "plotly_4070_neda.Rda")
load("plotly_4070_neda.Rda")
library(utils)
download.file("https://github.com/tpemartin/github-data/blob/master/plotly_4070_neda.Rda?raw=true",destfile = "plotly_4070_neda.Rda")
load("plotly_4070_neda.Rda")
install.packages("plotly")
library(utils)
download.file("https://github.com/tpemartin/github-data/blob/master/plotly_4070_neda.Rda?raw=true",destfile = "plotly_4070_neda.Rda")
install.packages("plotly")
install.packages("plotly")
library(utils)
download.file("https://github.com/tpemartin/github-data/blob/master/plotly_4070_neda.Rda?raw=true",destfile = "plotly_4070_neda.Rda")
load("plotly_4070_neda.Rda")
download.file("https://github.com/tpemartin/github-data/blob/master/plotly_4070_neda.Rda?raw=true",destfile = "plotly_4070_neda.Rda")
load("plotly_4070_neda.Rda")
library(readr)
transcriptData <- read_csv("https://raw.githubusercontent.com/tpemartin/github-data/master/transcript100_102.csv",
col_types = cols(
學期成績="n"
))
totalCredits<-function(x){
transcriptData[transcriptData$學號==x,]->subsample
subsample %>%
mutate(
及格=(學期成績>=60)
) %>%
summarise(
學號=學號[1],
總修習學分數=sum(學分數),
總實得學分數=sum(學分數[及格])
)
}
for(i in seq_along(符合條件學號)){
creditResults[[i]] <- totalCredits(符合條件學號[i])
}
creditResults<-vector("list",length(符合條件學號))
transcriptData %>%
filter(學屆==100,str_sub(學號,5,6)=="P1") -> subsample
library(readr)
transcriptData <- read_csv("https://raw.githubusercontent.com/tpemartin/github-data/master/transcript100_102.csv",
col_types = cols(
學期成績="n"
))
totalCredits<-function(x){
transcriptData[transcriptData$學號==x,]->subsample
subsample %>%
mutate(
及格=(學期成績>=60)
) %>%
summarise(
學號=學號[1],
總修習學分數=sum(學分數),
總實得學分數=sum(學分數[及格])
)
}
transcriptData %>%
filter(學屆==100,str_sub(學號,5,6)=="P1") -> subsample
library(dplyr)
transcriptData %>%
filter(學屆==100,str_sub(學號,5,6)=="P1") -> subsample
library(dplyr)
library(stringr)
transcriptData %>%
filter(學屆==100,str_sub(學號,5,6)=="P1") -> subsample
subsample$學號 %>% unique -> 符合條件學號
creditResults<-vector("list",length(符合條件學號))
for(i in seq_along(符合條件學號)){
creditResults[[i]] <- totalCredits(符合條件學號[i])
}
View(creditResults)
creditResults[200]
creditResults[[200]]
library(readr)
library(tidyr)
libraryData <- read_csv("https://raw.githubusercontent.com/tpemartin/github-data/master/libraryData2.csv")
libraryData %>%
group_by(學院) %>%
nest(.key="各院借閱資料") ->
libraryDataNested
libraryData %>% filter(學院=="人文學院")
libraryData %>%
group_by(學院) %>%
nest -> nestLibraryData %>%
filiter(學院=="人文學院") %>%
.$data
libraryData %>%
group_by(學院) %>%
nest -> nestLibraryData
libraryData %>%
group_by(學院) %>%
nest -> nestLibraryData
nestLibraryData %>%
filiter(學院=="人文學院") %>%
.$data
library(readr)
library(tidyr)
libraryData <- read_csv("https://raw.githubusercontent.com/tpemartin/github-data/master/libraryData2.csv")
libraryData %>%
group_by(學院) %>%
nest(.key="各院借閱資料") ->
libraryDataNested
libraryData %>%
group_by(學院) %>%
nest(.key="各院借閱資料") ->
libraryDataNested
transcriptData -> subsample
subsample$學號 %>% unique -> 符合條件學號
seq_along(符合條件學號)
creditResults<-vector("list",length(符合條件學號))
# 0
creditResults<-vector("list",length(符合條件學號))
i<-1
# 1
符合條件學號[i]
# 2
totalCredits(符合條件學號[i])
# 3
creditResults[[i]]<-totalCredits(符合條件學號[i])
creditResults<-vector("list",length(符合條件學號))
for(i in seq_along(符合條件學號)){
creditResults[[i]] <- totalCredits(符合條件學號[i])
}
creditResults[[200]]
libraryData %>%
group_by(學院) %>%
nest -> nestLibraryData
nestLibraryData %>%
filiter(學院=="人文學院") %>%
.$data
libraryData %>%
group_by(學院) %>%
nest -> nestLibraryData
nestLibraryData %>%
filter(學院=="人文學院") %>%
.$data
View(nestLibraryData)
View(libraryData)
nestLibraryData
View(libraryDataNested)
